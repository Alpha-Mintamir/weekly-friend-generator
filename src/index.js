// List of all possible names that can be paired
const people = [
  "Alphi",
  "Jerry",
  "Abigu",
  "Jovani",
  "Sami",
  "Melke",
  "Babi",
  "Fre",
  "Sari",
  "Bitu",
  "Mafi",
  "Beki",
  "Hero",
  "Nati",
  "Kiduse",
  "Sosi",
  "Luli",
];

// Object to keep track of paired people
let pairedPeople = {};

// Function to display the weekly friend generated by the AI
function friendDisplay(response) {
  console.log("Weekly Friend Generated");

  // Log the raw response to inspect it
  console.log("API Response:", response);

  // Get the weekly friend pair from the response
  let weeklyFriend = response.data.answer;

  // Log the weekly friend to ensure we are getting the correct data
  console.log("Weekly Friend Pair: ", weeklyFriend);

  // Check if the generated pair format is valid (i.e., two names separated by 'and')
  let pairNames = weeklyFriend.split(" and ");

  // Log the split names to debug the pairing
  console.log("Pair Names:", pairNames);

  if (pairNames.length === 2) {
    let person1 = pairNames[0].trim();
    let person2 = pairNames[1].trim();

    // Validate if both names are in the list of people and not the same person
    if (
      people.includes(person1) &&
      people.includes(person2) &&
      person1 !== person2
    ) {
      // Check if both names are already paired
      if (!pairedPeople[person1] && !pairedPeople[person2]) {
        // Add the pair to the pairedPeople object
        pairedPeople[person1] = person2;
        pairedPeople[person2] = person1; // Ensure bi-directional pairing

        // Use Typewriter.js to animate the weekly friend's name on the page
        new Typewriter("#friendDisplay", {
          strings: [
            `Your weekly friend is: ${person1} and ${person2}. Enjoy your time together!`,
          ],
          autoStart: true,
          delay: 75, // Adjust delay for smooth animation
          cursor: "|",
        });
      } else {
        // If already paired, show an error
        let pairedWith = pairedPeople[person1] || pairedPeople[person2];
        document.querySelector(
          "#friendDisplay"
        ).innerHTML = `You have already been paired with ${pairedWith}.`;
      }
    } else {
      // If the pair is invalid (e.g., names not in the list or same person twice), display an error
      document.querySelector("#friendDisplay").innerHTML =
        "Sorry, the pairing is invalid. Please try again.";
    }
  } else {
    // If the format is incorrect (e.g., no "and"), show an error
    document.querySelector("#friendDisplay").innerHTML =
      "Sorry, the pairing format is invalid. Please try again.";
  }
}

// Function to handle the form submission
function generateFriend(event) {
  event.preventDefault(); // Prevent form from submitting and refreshing the page

  let instructionsInput = document.querySelector("#user-instructions"); // Get the user's input
  let apiKey = "7b0b1a730a9afbf1o04aca30fc06dtfc"; // Replace with your valid API key

  // Check if the input is empty, and provide a fallback
  if (instructionsInput.value.trim() === "") {
    document.querySelector("#friendDisplay").innerHTML =
      "Please enter your name to generate a weekly friend.";
    return;
  }

  // Prepare the prompt for generating the weekly friend based on the user's input name
  let prompt = `Generate a weekly friend pairing for ${instructionsInput.value}. Pair this person with one individual from the following list: Alphi, Jerry, Abigu, Jovani, Sami, Melke, Babi, Fre, Sari, Bitu, Mafi, Beki, Hero, Nati, Kiduse, Sosi, Luli.`;

  let context = `You are an AI assistant tasked with pairing users for a weekly friendship activity. When a user submits their name, you need to randomly pair them with someone from a predefined list of names. Ensure that each pairing is unique and doesn't repeat, meaning that no person should be paired with the same person more than once during the week. The goal is to encourage connection and support between individuals.`;

  // Encode the prompt and context to be included in the API request
  let apiURL = `https://api.shecodes.io/ai/v1/generate?prompt=${encodeURIComponent(
    prompt
  )}&context=${encodeURIComponent(context)}&key=${apiKey}`;

  console.log("Generating Weekly Friend");

  // Make an API request to generate the weekly friend and handle the response
  axios
    .get(apiURL)
    .then(friendDisplay)
    .catch((error) => {
      console.error("Error fetching data:", error);
      document.querySelector("#friendDisplay").innerHTML =
        "Sorry, there was an error generating your weekly friend. Please try again later.";
    });
}

// Attach the submit event to the form
let FriendFormElement = document.querySelector("#friendForm");
FriendFormElement.addEventListener("submit", generateFriend);
